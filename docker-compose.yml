version: '3.8'

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: dockerx
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  adminapi:
    build:
      context: .
      dockerfile: src/AdminApi/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5001
      - ConnectionStrings__DefaultConnection=Host=db;Port=5432;Database=dockerx;Username=postgres;Password=postgres
    ports:
      - "5001:5001"
    depends_on:
      db:
        condition: service_healthy

  adminfront:
    build:
      context: ./src/admin
      dockerfile: Dockerfile
    environment:
      - NEXT_PUBLIC_ADMIN_API_URL=http://adminapi:5001
      - NEXT_PUBLIC_UPLOAD_API_URL=http://upload:5002
      - NEXT_PUBLIC_MEDIA_API_URL=http://media:5003
    ports:
      - "3001:3000"
    depends_on:
      - adminapi

  frontapi:
    build:
      context: .
      dockerfile: src/FrontApi/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5004
      - ConnectionStrings__DefaultConnection=Host=db;Port=5432;Database=dockerx;Username=postgres;Password=postgres
      - MediaApiUrl=http://media:5003
    ports:
      - "5004:5004"
    depends_on:
      db:
        condition: service_healthy
      media:
        condition: service_started

  upload:
    build:
      context: .
      dockerfile: src/Upload/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5002
      - ConnectionStrings__DefaultConnection=Host=db;Port=5432;Database=dockerx;Username=postgres;Password=postgres
      - Storage__Provider=local
      - Storage__Local__BasePath=/app/uploads
    ports:
      - "5002:5002"
    volumes:
      - upload_data:/app/uploads
    depends_on:
      db:
        condition: service_healthy

  media:
    build:
      context: .
      dockerfile: src/Media/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5003
      - ConnectionStrings__DefaultConnection=Host=db;Port=5432;Database=dockerx;Username=postgres;Password=postgres
      - UploadApiUrl=http://upload:5002
    ports:
      - "5003:5003"
    volumes:
      - upload_data:/app/uploads
    depends_on:
      db:
        condition: service_healthy
      upload:
        condition: service_started

volumes:
  postgres_data:
  upload_data: 